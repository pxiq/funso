<!DOCTYPE html>
<html lang="en">
<div id="ox"></div>
  <head>
    <meta charset="utf-8">
    <title>Canvas Primer - Example: Using ImageData</title>
    <script type="text/javascript"><!--
window.addEventListener('load', function () {
  // Get the canvas element.
  var elem = document.getElementById('myCanvas');
  if (!elem || !elem.getContext) {
    return;
  }

  // Get the canvas 2d context.
  var context = elem.getContext('2d');
  if (!context || !context.putImageData) {
    return;
  }

  var imgd = false,
      w = 50, h = 50,
      x = 0,  y = 0;

  // Not all browsers implement createImageData. On such browsers we obtain the 
  // ImageData object using the getImageData method. The worst-case scenario is 
  // to create an object *similar* to the ImageData object and hope for the best 
  // luck.
  if (context.createImageData) {
    imgd = context.createImageData(w, h);
  } else if (context.getImageData) {
    imgd = context.getImageData(0, 0, w, h);
  } else {
    imgd = {'width' : w, 'height' : h, 'data' : new Array(w*h*4)};
  }
  var pix = imgd.data;

  // Loop over each pixel.
  for (var i = 0, n = pix.length; i < n; i += 4) {
    pix[i  ] = 255; // the red channel
    pix[i+3] = 127; // the alpha channel
  }

  // Draw the ImageData object.
  context.putImageData(imgd, x, y);
}, false);
    // --></script>
  </head>
  <body>
    <p><canvas id="myCanvas" width="100" height="100">Your browser does not have 
    support for Canvas.  You should see: <span 
      style="display:block;width:50px;height:50px;background:#f77">&nbsp;</span></canvas></p>
  </body>
</html>


<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Canvas Primer - Example: drawImage</title>
    <script type="text/javascript"><!--
window.addEventListener('load', function () {
  // Get the canvas element.
  var elem = document.getElementById('myCanvas');
  if (!elem || !elem.getContext) {
    return;
  }

  // Get the canvas 2d context.
  var context = elem.getContext('2d');
  if (!context || !context.drawImage) {
    return;
  }

  // Create a new image.
  var img = new Image();

  // Once it's loaded draw the image on the canvas.
  img.addEventListener('load', function () {
    // Original resolution: x, y.
    context.drawImage(this, 0, 0);

    // Now resize the image: x, y, w, h.
    context.drawImage(this, 160, 0, 120, 70);

    // Crop and resize the image: sx, sy, sw, sh, dx, dy, dw, dh.
    context.drawImage(this, 8, 20, 140, 50, 0, 150, 350, 70);
  }, false);

  img.src = 'images/150x150opera9.gif';
}, false);
    // --></script>
  </head>
  <body>
    <p><canvas id="myCanvas" width="350" height="250">Your browser does not have 
    support for Canvas. You should see something like the following image: <img 
    src="images/example-drawimage.jpg"
    alt="Example rendering of drawImage."></canvas></p>
  </body>
</html>


<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Canvas Primer - Example: Using paths</title>
    <script type="text/javascript"><!--
window.addEventListener('load', function () {
  // Get the canvas element.
  var elem = document.getElementById('myCanvas');
  if (!elem || !elem.getContext) {
    return;
  }

  // Get the canvas 2d context.
  var context = elem.getContext('2d');
  if (!context) {
    return;
  }

  context.fillStyle   = '#00f';
  context.strokeStyle = '#f00';
  context.lineWidth   = 4;

  // Draw a line, then a B¨¨zier curve.
  context.beginPath();
  context.moveTo(10, 10);
  context.lineTo(100, 100);
  context.moveTo(150, 100);

  // Arguments: cp1x, cp1y, cp2x, cp2y, x, y
  // cp = control point.
  context.bezierCurveTo(180, 30, 250, 180, 300, 100);
  context.stroke();
  context.closePath();

  // Draw a circle using the arc function.
  context.beginPath();

  // Arguments: x, y, radius, start angle, end angle, anticlockwise
  context.arc(125, 115, 30, 0, 360, false);
  context.stroke();
  context.closePath();
}, false);
    // --></script>
  </head>
  <body>
    <p><canvas id="myCanvas" width="300" height="150">Your browser does not have 
    support for Canvas.</canvas></p>
  </body>
</html>


<!DOCTYPE html>
<html lang="en">
<head>
<meta charset=utf-8 />
<title>Canvas Gradient</title>
<style>
body {
  background: #000;
}
canvas {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}
</style>
</head>
<body>
<canvas height="600" width="600"></canvas>
<script>
var canvas = document.getElementsByTagName('canvas')[0],
    ctx = null,
    grad = null,
    body = document.getElementsByTagName('body')[0],
    color = 255;
    
if (canvas.getContext('2d')) {
  ctx = canvas.getContext('2d');
  ctx.clearRect(0, 0, 600, 600);
  ctx.save();
  // Create radial gradient
  grad = ctx.createRadialGradient(0,0,0,0,0,600); 
  grad.addColorStop(0, '#000');
  grad.addColorStop(1, 'rgb(' + color + ', ' + color + ', ' + color + ')');

  // assign gradients to fill
  ctx.fillStyle = grad;

  // draw 600x600 fill
  ctx.fillRect(0,0,600,600);
  ctx.save();
  
  body.onmousemove = function (event) {
    var width = window.innerWidth, 
        height = window.innerHeight, 
        x = event.clientX, 
        y = event.clientY,
        rx = 600 * x / width,
        ry = 600 * y / height;
        
    var xc = ~~(256 * x / width);
    var yc = ~~(256 * y / height);

    grad = ctx.createRadialGradient(rx, ry, 0, rx, ry, 600); 
    grad.addColorStop(0, '#000');
    grad.addColorStop(1, ['rgb(', xc, ', ', (255 - xc), ', ', yc, ')'].join(''));
    // ctx.restore();
    ctx.fillStyle = grad;
    ctx.fillRect(0,0,600,600);
    // ctx.save();
  };
}
</script>
<a href="http://github.com/remy/html5demos"><img style="position: absolute; top: 0; left: 0; border: 0;" src="http://s3.amazonaws.com/github/ribbons/forkme_left_darkblue_121621.png" alt="Fork me on GitHub" /></a>
<script>
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script>
try {
var pageTracker = _gat._getTracker("UA-1656750-18");
pageTracker._trackPageview();
} catch(err) {}</script>

</body>
</html>